name: Update Babylon OpenAPI Specs

# Workflow triggers
on:
  schedule:
    # Runs weekly on Sunday at midnight UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:  # Enables manual trigger via GitHub Actions UI
  push:
    branches:
      - main

jobs:
  update-swagger:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the target repository
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          
      # Step 2: Clean workspace before processing
      # This ensures no leftover files from previous runs or manual deletions
      - name: Clean workspace
        run: |
          # Remove existing docs directory if it exists
          rm -rf docs
          # Remove any existing checked out repositories
          rm -rf cometbft babylon staking-api
          
      # Step 3: Create fresh docs directory
      - name: Create docs directory
        run: mkdir -p docs
          
      # Step 4: Checkout CometBFT repository
      - name: Checkout CometBFT repository
        uses: actions/checkout@v4
        with:
          repository: cometbft/cometbft
          ref: v0.38.17
          path: cometbft
          token: ${{ secrets.PAT_TOKEN }}
          
      # Step 5: Checkout Babylon Core repository
      - name: Checkout Babylon repository
        uses: actions/checkout@v4
        with:
          repository: babylonlabs-io/babylon
          ref: main
          path: babylon
          token: ${{ secrets.PAT_TOKEN }}
          
      # Step 6: Checkout Babylon Staking API repository
      - name: Checkout Staking API repository
        uses: actions/checkout@v4
        with:
          repository: babylonlabs-io/staking-api-service
          ref: main
          path: staking-api
          token: ${{ secrets.PAT_TOKEN }}
          
      # Step 7: Copy OpenAPI files with error handling
      - name: Copy OpenAPI files
        run: |
          # Function to safely copy files with error checking
          safe_copy() {
            if [ -f "$1" ]; then
              cp "$1" "$2"
              echo "Successfully copied $1 to $2"
            else
              echo "Warning: Source file $1 not found"
              exit 1
            fi
          }
          
          # Copy each specification file with error checking
          safe_copy "cometbft/rpc/openapi/openapi.yaml" "docs/cometbft-rpc-openapi3.yaml"
          safe_copy "babylon/client/docs/swagger-ui/swagger.yaml" "docs/babylon-rpc-swagger2.yaml"
          safe_copy "staking-api/docs/swagger.yaml" "docs/babylon-staking-api-swagger2.yaml"
          
      # Step 8: Verify files exist before committing
      - name: Verify files
        run: |
          required_files=(
            "docs/cometbft-rpc-openapi3.yaml"
            "docs/babylon-rpc-swagger2.yaml"
            "docs/babylon-staking-api-swagger2.yaml"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: Required file $file is missing"
              exit 1
            fi
          done
          
      # Step 9: Commit and push changes
      - name: Commit and push changes
        run: |
          # Configure git user for commit
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Stage all files in docs directory
          git add docs/
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "Update OpenAPI specifications [skip ci]"
            git push
          fi

# Required repository secrets:
# - PAT_TOKEN: Personal Access Token with `repo` scope for accessing private repositories
#   To create: GitHub Settings -> Developer settings -> Personal access tokens -> Generate new token
#   To add: Repository Settings -> Secrets and variables -> Actions -> New repository secret