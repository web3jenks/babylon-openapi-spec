name: Update Babylon OpenAPI Specs

# Workflow triggers
on:
  schedule:
    # Runs weekly on Sunday at midnight UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:  # Enables manual trigger via GitHub Actions UI

jobs:
  process-specs:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    # Add permissions block to explicitly set token permissions
    permissions:
      contents: write
      
    steps:
      # Step 1: Get the latest version of the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}  # Use PAT_TOKEN for checkout

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Install required npm packages
      - name: Install dependencies
        run: |
          npm install -g js-yaml api-spec-converter swagger-cli
          
      # Step 4: Create processed directory
      - name: Create processed directory
        run: mkdir -p ./docs/processed

      # Step 5: Upgrade Babylon RPC API specification
      - name: Upgrade Babylon RPC API
        run: |
          npx api-spec-converter -f swagger_2 -t openapi_3 \
          ./docs/babylon-rpc-swagger2.yaml > \
          ./docs/processed/babylon-rpc-openapi3.yaml -c
        continue-on-error: false

      # Step 6: Upgrade Babylon Staking API specification
      - name: Upgrade Babylon Staking API
        run: |
          npx api-spec-converter -f swagger_2 -t openapi_3 \
          ./docs/babylon-staking-api-swagger2.yaml > \
          ./docs/processed/babylon-staking-api-openapi3.yaml -c
        continue-on-error: false

      # Step 7: Validate converted specifications
      - name: Validate converted specifications
        run: |
          echo "Validating Babylon RPC API..."
          npx swagger-cli validate ./docs/processed/babylon-rpc-openapi3.yaml
          
          echo "Validating Babylon Staking API..."
          npx swagger-cli validate ./docs/processed/babylon-staking-api-openapi3.yaml
        continue-on-error: false

      # Step 8: Merge RPC specifications
      - name: Merge RPC specifications
        run: |
          node mergeRpcOpenAPIs.js \
          ./docs/processed/babylon-rpc-openapi3.yaml \
          ./docs/cometbft-rpc-openapi.yaml \
          ./docs/processed/babylon-rpc-openapi3.yaml
        continue-on-error: false

      # Step 9: Validate merged specification
      - name: Validate merged specification
        run: |
          echo "Validating merged RPC API specification..."
          npx swagger-cli validate ./docs/processed/babylon-rpc-openapi3.yaml
        continue-on-error: false

      # Step 10: Clean up temporary files
      - name: Cleanup original files
        if: success()
        run: |
          rm -f ./docs/processed/babylon-rpc-openapi3.yaml

      # Step 11: Commit and push processed files
      - name: Commit processed files
        if: success()
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Check if there are changes to commit
          if git diff --staged --quiet && git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git add ./docs/processed/
          git commit -m "Process and merge OpenAPI specifications"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Use PAT_TOKEN consistently

# Required repository secrets:
# - PAT_TOKEN: Personal Access Token with `repo` scope for accessing private repositories
#   To create: GitHub Settings -> Developer settings -> Personal access tokens -> Generate new token
#   To add: Repository Settings -> Secrets and variables -> Actions -> New repository secret